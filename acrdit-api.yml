openapi: "3.0.0"
info:
  version: 0.0.1
  title: CardIt
servers: 
  - url: 'carditapi.hipper.world:8090'
tags:
  - name: Customer Login
    description: Login and signup Customers
  - name: Customer Actions
    description: Manage Customers
  - name: Business Login
    description: Login and signup Business
  - name: Business Actions
    description: Manage Business
  - name: Admin Actions
    description: Manage as Admin
paths:
  '/customer/login':
    post:
      tags:
        - Customer Login
      summary: Login by Email
      description: ''
      operationId: login
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/login_request'
      responses:
        '200':
          $ref: '#/components/schemas/login_response'
        '405':
          description: Invalid input
  '/customer/login/check_email':
    post:
      tags:
        - Customer Login
      summary: Check Email Address
      operationId: emailCheck
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              properties:
                email:
                  type: string
              required:
              - token
      responses:
        '405':
          description: Invalid input
  '/customer/login/signup':
    post:
      tags:
        - Customer Login
      summary: Signup by Email
      operationId: emailSignup
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/login_request'
      responses:
        '200':
          $ref: '#/components/schemas/login_response'
        '405':
          description: Invalid input
  '/customer/login/refresh':
    post:
      tags:
        - Customer Login
      summary: refresh the Customer token
      operationId: refresh token
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              properties:
                refreshToken:
                  description: refresh key of the customer
                  type: string
                email:
                  description: Customer email
                  type: string
      responses:
        '200':
          $ref: '#/components/schemas/login_response'
        '405':
          description: Invalid input
  '/customer/login/facebook':
    post:
      tags:
        - Customer Login
      summary: Login or register using a facebook token
      description: 'Use scope=public_profile,email in the requset'
      operationId: loginFacebookToken
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              properties:
                token:
                  type: string
              required:
              - token
      responses:
        '200':
          $ref: '#/components/schemas/login_response'
        '405':
          description: Invalid input
  '/customer/login/google':
    post:
      tags:
        - Customer Login
      summary: Login or register using a Google token
      description: 'Use scope=profile,email in the requset'
      operationId: loginGoogleToken
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              properties:
                token:
                  type: string
              required:
              - token
      responses:
        '200':
          $ref: '#/components/schemas/login_response'
        '405':
          description: Invalid input
  
  # -----------------------
  # Customer Actions
  # -----------------------
  '/customer/public/business':
    get:
      tags:
        - Customer Actions
      summary: List all the businesses in the catalog
      description: List all the businesses in the catalog
      parameters:
        - name: id
          in: path
          description: The id of the Customer
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/business'
  '/customer/public/business/{businessId}/benefit_offer':
    get:
      tags:
        - Customer Actions
      summary: List all offers of the business
      description: List all offers of the business
      parameters:
        - name: id
          in: path
          description: The id of the Customer
          required: true
          schema:
            type: string
        - name: businessId
          in: path
          description: The id of the busienss
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/benefit_offer'
  '/customer/{id}':
    get:
      tags:
        - Customer Actions
      summary: Get the Customer data
      description: Get the Customer data
      parameters:
        - name: id
          in: path
          description: The id of the Customer
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Purchase request with code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customer'
  '/customer/{id}/business':
    get:
      tags:
        - Customer Actions
      summary: List all the businesses in the catalog
      description: List all the businesses in the catalog
      parameters:
        - name: id
          in: path
          description: The id of the Customer
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Purchase request with code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/business'
  '/customer/{id}/business/{businessId}/benefit_offer':
    get:
      tags:
        - Customer Actions
      summary: List all offers of the business
      description: List all offers of the business
      parameters:
        - name: id
          in: path
          description: The id of the Customer
          required: true
          schema:
            type: string
        - name: businessId
          in: path
          description: The id of the busienss
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Purchase request with code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/benefit_offer'
  '/customer/{id}/my_benefites':
    get:
      tags:
        - Customer Actions
      summary: List all benefites the user has (favorite, purchased, Usage)
      description: List all benefites the user has (favorite, purchased, Usage)
      parameters:
        - name: id
          in: path
          description: The id of the Customer
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Purchase request with code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/all_customer_benefits'
  '/customer/{id}/benefit_favorite':
    get:
      tags:
        - Customer Actions
      summary: List all the favorite benefits offered to the Customer
      description: List all the favorite benefits offered to the Customer
      parameters:
        - name: id
          in: path
          description: The id of the Customer
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of favorite benefits offered
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/benefit_offer'
    post:
      tags:
        - Customer Actions
      summary: Add favorite to the Customer
      description: Add favorite to the Customer
      parameters:
        - name: id
          in: path
          description: The id of the Customer
          required: true
          schema:
            type: string
      requestBody:
        description: Request to add offer to favorites
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/benefit_offer_favorite_add'
      responses:
        '200':
          description: List of favorite benefits offered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/benefit_offer'
  '/customer/{id}/benefit_favorite/{benefitOfferId}':
    delete:
      tags:
        - Customer Actions
      summary: Remove favorite from the Customer
      description: Remove favorite from the Customer
      parameters:
        - name: id
          in: path
          description: The id of the Customer
          required: true
          schema:
            type: string
        - name: benefitOfferId
          in: path
          description: The benefit offer to remove
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of favorite benefits offered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/benefit_offer'
  '/customer/{id}/benefit_purchased/request':
    post:
      tags:
        - Customer Actions
      summary: Create purches request for the benefit
      description: Create purches request for the benefit
                    In the future also buy the benefit offer for Customer
      parameters:
        - name: id
          in: path
          description: The id of the Customer
          required: true
          schema:
            type: string
      requestBody:
        description: Info about the purchase
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/benefit_purchase_request'
      responses:
        '200':
          description: Purchase request with code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/benefit_purchase_request'
  '/customer/{id}/benefit_purchased/request/{requestId}':
    delete:
      tags:
        - Customer Actions
      summary: Delete request to purchased benefit
      description: Delete request to purchased benefit
      parameters:
        - name: id
          in: path
          description: The id of the Customer
          required: true
          schema:
            type: string
        - name: requestId
          in: path
          description: The id spesific request
          required: true
          schema:
            type: string
      responses:
        '200':
          description: request deleted
  '/customer/{id}/benefit_purchased':
    get:
      tags:
        - Customer Actions
      summary: List all the benefits the Customer purchased
      description: List all the benefits the Customer purchased
      parameters:
        - name: id
          in: path
          description: The id of the Customer
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of benefits offered
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/benefit_purchased'
  '/customer/{id}/benefit_usage/request':
    post:
      tags:
        - Customer Actions
      summary: Create use request for the purchased benefit
      description: Create use request for the purchased benefit
      parameters:
        - name: id
          in: path
          description: The id of the Customer
          required: true
          schema:
            type: string
      requestBody:
        description: Info about the usage reuest
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/benefit_usage_request'
      responses:
        '200':
          description: Usage request with code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/benefit_usage_request'
  '/customer/{id}/benefit_usage/request/{requestId}':
    delete:
      tags:
        - Customer Actions
      summary: Delete request to use benefit
      description: Delete request to use benefit
      parameters:
        - name: id
          in: path
          description: The id of the Customer
          required: true
          schema:
            type: string
        - name: requestId
          in: path
          description: The id spesific request
          required: true
          schema:
            type: string
      responses:
        '200':
          description: request deleted
  '/customer/{id}/benefit_usage':
    get:
      tags:
        - Customer Actions
      summary: List benefit usage for the customer
      description: List benefit usage for the customer
      parameters:
        - name: id
          in: path
          description: The id of the Customer
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of previous benefit usage 
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/benefit_usage'              
  '/customer/{id}/transaction_history':
    get:
      tags:
        - Customer Actions
      summary: List benefit usage for the customer
      description: List benefit usage for the customer
      parameters:
        - name: id
          in: path
          description: The id of the Customer
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of previous benefit usage 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transaction_history'     
  #
  # Business login
  #
  '/business/login/email':
    post:
      tags:
        - Business Login
      summary: Signup new provider
      description: Create new provider in the system
      operationId: signupProvider
      requestBody:
        description: Info about the provider location
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/login_request'
      responses:
        '200':
          description: successful operation
  #
  # Business Actions
  #
  '/business/{businessId}/request':
    get:
      tags:
        - Business Actions
      summary: List the pending requests for the business
      description: List the pending requests for the business
      parameters:
        - name: businessId
          in: path
          description: The id of the business
          required: true
          schema:
            type: string
        - name: code
          in: query
          description: filter by the code of the request, suppose to return only one request
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/benefit_request_details'
  '/business/{businessId}/request/redeem':
    post:
      tags:
        - Business Actions
      summary: Redeem the benefit by the request id
      description: Redeem the benefit by the request id
      parameters:
        - name: businessId
          in: path
          description: The id of the business
          required: true
          schema:
            type: string
      requestBody:
        description: Uniqe identification for the benefit purchase requst
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/benefit_request_redeem'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/benefit_purchased'
                  - $ref: '#/components/schemas/benefit_usage'
  '/business/{businessId}/benefit_purchased':
    get:
      tags:
        - Business Actions
      summary: List of benefits that the business sold
      description: List of benefits that the business sold
                    The default is one month back and max of 100 benefits
      parameters:
        - name: businessId
          in: path
          description: The id of the business
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of Classification Categories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/benefit_purchased'
  '/business/{businessId}/benefit_usage':
    get:
      tags:
        - Business Actions
      summary: List the finished usage requests
      description: List the finished usage requests
                    The default is one month back and max of 100 benefits
      parameters:
        - name: businessId
          in: path
          description: The id of the business
          required: true
          schema:
            type: string
        - name: from
          in: query
          description: The starting date to get the list
          required: false
          schema:
            type: string
        - name: to
          in: query
          description: The ending date to get the list
          required: false
          schema:
            type: string
        - name: maxrec
          in: query
          description: The maximum number of record to show, defualt is 100
          required: false
          schema:
            type: number
      responses:
        '200':
          description: List of benefits offered
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/benefit_usage'
  #
  # Business Actions
  #
  '/admin/business':
    post:
      tags:
        - Admin Actions
      summary: Add business to the system
      description: Add business to the system
      parameters:
        - name: businessId
          in: path
          description: The id of the business
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/business'
  '/admin/business/{businessId}':
    get:
      tags:
        - Admin Actions
      summary: Get all business info
      description: Get all business info
      parameters:
        - name: businessId
          in: path
          description: The id of the business
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/business'
    post:
      tags:
        - Admin Actions
      summary: Update business info
      description: Update business info
      parameters:
        - name: businessId
          in: path
          description: The id of the business
          required: true
          schema:
            type: string
      requestBody:
        description: Uniqe identification for the benefit purchase requst
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/business'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/business'
  '/admin/business/{businessId}/benefit_offer':
    get:
      tags:
        - Admin Actions
      summary: Get All business benefits offered
      description: Get All business benefits offered
      parameters:
        - name: businessId
          in: path
          description: The id of the business
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of benefits offered
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/benefit_offer'
    post:
      tags:
        - Admin Actions
      summary: Add benefit offered to business
      description: Add benefit offered to business
      parameters:
        - name: businessId
          in: path
          description: The id of the business
          required: true
          schema:
            type: string
      requestBody:
        description: Uniqe identification for the benefit purchase requst
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/benefit_offer'
      responses:
        '200':
          description: The created benefits offer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/benefit_offer'
  '/admin/business/{businessId}/benefit_offer/{offerId}':
    get:
      tags:
        - Admin Actions
      summary: Get business offered benefit
      description: Get business offered benefit
      parameters:
        - name: businessId
          in: path
          description: The id of the business
          required: true
          schema:
            type: string
        - name: offerId
          in: path
          description: The id of the offer
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of benefits offered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/benefit_offer'
    post:
      tags:
        - Admin Actions
      summary: Update business offered benefit
      description: Update business offered benefit
      parameters:
        - name: businessId
          in: path
          description: The id of the business
          required: true
          schema:
            type: string
        - name: offerId
          in: path
          description: The id of the offer
          required: true
          schema:
            type: string
      requestBody:
        description: Uniqe identification for the benefit purchase requst
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/benefit_offer'
      responses:
        '200':
          description: List of benefits offered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/benefit_offer'
    delete:
      tags:
        - Admin Actions
      summary: Update business offered benefit
      description: Update business offered benefit
      parameters:
        - name: businessId
          in: path
          description: The id of the business
          required: true
          schema:
            type: string
        - name: offerId
          in: path
          description: The id of the offer
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of benefits offered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/benefit_offer'
  '/admin/business/{businessId}/banner':
    post:
      tags:
        - Admin Actions
      summary: Upload business picture
      description: Upload business picture
      parameters:
        - name: businessId
          in: path
          description: The id of the business
          required: true
          schema:
            type: string
      requestBody:
        description: File structure with base64 property
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/file_base64'
      responses:
        '401':
          $ref: '#/components/responses/Unauthorized'   # <-----
        '404':
          $ref: '#/components/responses/NotFound'       # <-----
  '/admin/business/{businessId}/benefit_offer/{offerId}/banner':
    post:
      tags:
        - Admin Actions
      summary: Upload Offer picture
      description: Upload Offer picture
      parameters:
        - name: businessId
          in: path
          description: The id of the business
          required: true
          schema:
            type: string
        - name: offerId
          in: path
          description: The id of the offer
          required: true
          schema:
            type: string
      requestBody:
        description: File structure with base64 property
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/file_base64'
      responses:
        '401':
          $ref: '#/components/responses/Unauthorized'   # <-----
        '404':
          $ref: '#/components/responses/NotFound'       # <-----
# securityDefinitions:
#  petstore_auth:
#    type: oauth2
#    authorizationUrl: 'http://petstore.swagger.io/oauth/dialog'
#    flow: implicit
#    scopes:
#      'write:pets': modify pets in your account
#      'read:pets': read your pets
#  api_key:
#    type: apiKey
#    name: api_key
#    in: header 
components:
  responses:
    ByteImage:
      description: Image
      content:
        image/png:
          schema:
            type: string
            format: binary
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
    
  schemas:
    login_request:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    
    login_response:
      type: object
      properties:
        access_token:
          type: string
        refresh_token:
          type: string
        scope:
          type: string
        token_type:
          type: string
        expires_in:
          type: number
        customer_id:
          type: string
        business_id:
          type: string

    address:
      type: object
      properties:
        adress1:
          type: string
        address2:
          type: string
        district:
          type: string
        city:
          type: string
        country:
          type: string
        postalCode:
          type: string
        phone:
          type: string
        location:
          $ref: '#/components/schemas/location'
    location:
      type: object
      properties:
        x:
          type: number
          format: dubble
        y:
          type: number
          format: dubble
    
    customer:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        gender:
          type: string
          enum: [male, female]
        birthDate:
          type: string
          format: date-time
          
    business:
      type: object
      properties:
        email:
          type: string
        name:
          type: string
        address:
          $ref: '#/components/schemas/address'
        information:
          $ref: '#/components/schemas/businessInformation'
          
    businessInformation:
      type: object
      properties:
        contactName:
          type: string
        decription:
          type: string
        picture_url:
          type: string
        facebook_url:
          type: string
    
    benefit_type:
      description: The type of the benefit
      type: string
      enum: [free, prepaid]
    
    request_type:
      description: The type of the request
      type: string
      enum: [purchase, use]
      
    all_customer_benefits:
      type: object
      properties:
        favorites:
          type: array
          items:
            $ref: '#/components/schemas/benefit_offer'
        purchased:
          type: array
          items:
            $ref: '#/components/schemas/benefit_purchased'
        suggested:
          description: Offers the system suggesting the user
          type: array
          items:
            $ref: '#/components/schemas/benefit_purchased'
    
    transaction_history:
      type: object
      properties:
        purchased:
          type: array
          items:
            $ref: '#/components/schemas/benefit_purchased'
        usage:
          description: Offers the system suggesting the user
          type: array
          items:
            $ref: '#/components/schemas/benefit_usage'
    
    benefit_offer:
      type: object
      properties:
        id:
          type: string
        businessId:
          type: string
        type:
          $ref: '#/components/schemas/benefit_type'
        validFrom:
          type: string
          format: date-time
        validTo:
          type: string
          format: date-time
        description:
          type: string
        price:
          type: number
        points:
          type: number
      required:
        - type
        - validFrom
        - validTo
        - price
        - description
    
    benefit_offer_favorite_add:
      type: object
      properties:
        businessId:
          type: string
        benefitOfferId:
          type: string
      required:
        - businessId
        - benefitOfferId
    
    benefit_purchase_request:
      type: object
      properties:
        benefitOfferId:
          description: the ID of the business the benefit belongs to
          type: string
        businessId:
          description: the ID of the business the benefit belongs to
          type: string
        CustomerId:
          description: the ID of the business the benefit belongs to
          type: string
        code:
          $ref: '#/components/schemas/benefit_code'
        requestTime:
          description: The time the request was sent
          type: string
          format: date-time
      required:
        - businessId
        - code
        - requestTime
        
    benefit_request_details:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/request_type'
        code:
          $ref: '#/components/schemas/benefit_code'
        customerEmail:
          description: The name of the customer
          type: string
        customerFirstName:
          description: The name of the customer
          type: string
        customerLastName:
          description: The name of the customer
          type: string
        requestTime:
          description: The time the request was sent
          type: string
          format: date-time
      required:
        - benefit_offer_id
        - code
        - requestTime
        
    benefit_request_details_purchase:
      allOf:
        - $ref: '#/components/schemas/benefit_request_details'
        - type: object
          properties:
            benefitOfferType:
              $ref: '#/components/schemas/benefit_type'
            benefitOfferId:
              description: the ID of the business the benefit belongs to
              type: string
            offerDescription:
              description: The description of the offer
              type: string
            offerPrice:
              description: The price of the offer
              type: number
          required:
            - benefit_offer_id
            
    benefit_request_details_usage:
      allOf:
        - $ref: '#/components/schemas/benefit_request_details'
        - type: object
          properties:
            benefit_usage_id:
              description: The usage request id
              type: string
            benefit_purchased_id:
              description: The origin benefit purchased id
              type: string
            pointsPerchased:
              description: The point to reduce
                            Required only for points type
              type: number
            pointsStatus:
              description: Current points of the purchase
              type: number
        
    benefit_code:
      description: Returned by the server for new Customer requests,
                    Send by the business for confirmation
      type: number
      minimum: 1000
      maximum: 9999
    
    benefit_request_redeem:
      type: object
      properties:
        requestId:
          $ref: '#/components/schemas/benefit_code'
        pointsToReduce:
          type: number
        redeemTime:
          type: string
          format: date-time
      required:
      - requestId
      - redeemTime
    
    benefit_purchased:
      type: object
      properties:
        id:
          description: The offered benefit id
          type: string
        benefitOfferId:
          description: The origin benefit purchased id
          type: string
        type:
          $ref: '#/components/schemas/benefit_type'
        validFrom:
          type: string
          format: date-time
        validTo:
          type: string
          format: date-time
        description:
          type: string
        name:
          type: string
        price:
          type: number
        pointsPerchased:
          type: number
        pointsStatus:
          type: number
        businessName:
          type: string
        businessLogoPath:
          type: string
        benefitOfferPicturePath:
          type: string
    
    benefit_usage_request:
      type: object
      description: The Customer gets this object, And the business can query it
      properties:
        benefit_usage_id:
          description: The usage request id
          type: string
        benefit_purchased_id:
          description: The origin benefit purchased id
          type: string
        businessId:
          description: the ID of the business the benefit belongs to
          type: string
        CustomerId:
          description: the ID of the customer requesting
          type: string
        points:
          description: The point to reduce
                        Required only for points type
          type: number
        # Only returned can not set by the Customer
        code:
          $ref: '#/components/schemas/benefit_code'
        requestTime:
          type: string
          format: date-time
    
    benefit_usage:
      type: object
      properties:
        id:
          description: The benefit usage id
          type: string
        benefit_purchased_id:
          description: The origin benefit purchased id
          type: string
        businessId:
          description: the ID of the business the benefit belongs to
          type: string
        CustomerId:
          description: the ID of the customer requesting
          type: string
        points_used:
          type: number
        points_left:
          type: number
        businessName:
          type: string
        businessLogoPath:
          type: string
        benefitOfferPicturePath:
          type: string
    
    error:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    file_base64:
      type: object
      properties:
        base64:
          description: File representation in base64
          type: string
        hight:
          type: integer
          format: int64
        width:
          type: integer
          format: int64
        name:
          type: string
