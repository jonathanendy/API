swagger: '2.0'
info:
  version: 1.0.0
  title: HiPPER
host: 'ec2-52-59-69-22.eu-central-1.compute.amazonaws.com:8090'
basePath: /
tags:
  - name: customer
    description: create and manage customers signups
  - name: register/provider
    description: create and manage providers signups
  - name: tours generator
    description: Create and get new tours
  - name: product
    description: create and manage providers signups
paths:
  /register/customer/signup:
    post:
      tags:
        - customer
      summary: Create new customer in the ststem
      description: ''
      operationId: addPet
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: email
          in: query
          description: The user email for login
          required: true
          type: string
        - name: username
          in: query
          description: The username for login
          required: true
          type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: true
          type: string
        - name: cpassword
          in: query
          description: The password repeats for login in clear text
          required: true
          type: string
      responses:
        '405':
          description: Invalid input
  /public/auth/facebook/token:
    post:
      tags:
        - customer
      summary: Login or register using a facebook token
      description: 'Use scope=public_profile,email in the requset'
      operationId: loginFacebookToken
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: token
          in: query
          description: The
          required: true
          type: string
      responses:
        '405':
          description: Invalid input
  '/secured/customer/{id}/buy/suggestedtour/{tour_code}':
    post:
      tags:
        - customer
      summary: Assign the tour for the customer
      description: >-
        The customer is already registered in the system, use after the buying
        confirmation
      operationId: buySuggestedTourByCustomer
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: the database id of the customer
          required: true
          type: string
        - name: tour_code
          in: path
          description: The unieqe code of that tour
          required: true
          type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: true
          type: string
        - name: cpassword
          in: query
          description: The password repeats for login in clear text
          required: true
          type: string
      responses:
        '405':
          description: Invalid input
  /register/provider/signup:
    get:
      tags:
        - register/provider
      summary: Returns pet inventories by status
      description: Returns a map of status codes to quantities
      operationId: getInventory
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            additionalProperties:
              type: string
              format: string
  /tours/generator:
    post:
      tags:
        - tours generator
      summary: Generate tours by demand
      description: Generate tours by demand
      produces:
        - application/json
      parameters:
        - name: userID
          in: query
          description: The user id
          required: false
          type: string
        - name: location
          in: query
          description: GEO location for the request  34.123;23.22344
          required: true
          type: string
        - name: requestTime
          in: query
          description: Current time
          required: true
          type: number
      responses:
        '200':
          description: successful operation
  '/tours/generator/list/{list_token}':
    get:
      tags:
        - tours generator
      summary: Get the generated list for the request
      description: Get the generated list for the request
      produces:
        - application/json
      parameters:
        - name: list_token
          in: path
          description: The token recieved when generate requested
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            additionalProperties:
              type: integer
              format: int32
  '/secured/provider/{providerId}/product':
    get:
      tags:
        - product
      summary: Get provider products
      description: get all the products for the provider
      operationId: findAllByProviderId
      produces:
        - application/json
      parameters:
        - name: providerId
          in: path
          description: The id of the provider
          required: true
          type: string
      responses:
        default:
          description: successful operation
    post:
      tags:
        - product
      summary: Create new provider product
      description: Add new product for the provider
      operationId: createProduct
      produces:
        - application/json
      parameters:
        - name: providerId
          in: path
          description: The id of the provider
          required: true
          type: string
        - name: productName
          in: query
          description: The id of the provider
          required: true
          type: string
        - name: productType
          in: query
          description: The id of the provider
          required: true
          type: string
        - name: price
          in: query
          description: The id of the provider
          required: true
          type: string
        - name: description
          in: query
          description: The id of the provider
          required: true
          type: string
      responses:
        default:
          description: successful operation
  '/secured/provider/{providerId}/product/{product_id}':
    put:
      tags:
        - product
      summary: Change product
      description: Change product for the provider
      operationId: updateProduct
      produces:
        - application/json
      parameters:
        - name: providerId
          in: path
          description: The id of the provider
          required: true
          type: string
        - name: productName
          in: query
          description: The id of the provider
          required: true
          type: string
        - name: productType
          in: query
          description: The id of the provider
          required: true
          type: string
        - name: price
          in: query
          description: The id of the provider
          required: true
          type: string
        - name: description
          in: query
          description: The id of the provider
          required: true
          type: string
      responses:
        default:
          description: successful operation
    delete:
      tags:
        - product
      summary: Delete provider product
      description: Delete one product for the provider
      operationId: deleteProduct
      produces:
        - application/json
      parameters:
        - name: providerId
          in: path
          description: The id of the provider
          required: true
          type: string
        - name: product_id
          in: path
          description: The id of the product to delete
          required: true
          type: string
      responses:
        default:
          description: successful operation
securityDefinitions:
  petstore_auth:
    type: oauth2
    authorizationUrl: 'http://petstore.swagger.io/oauth/dialog'
    flow: implicit
    scopes:
      'write:pets': modify pets in your account
      'read:pets': read your pets
  api_key:
    type: apiKey
    name: api_key
    in: header
definitions:
  customer:
    type: object
    properties:
      id:
        type: integer
        format: int64
      petId:
        type: integer
        format: int64
      quantity:
        type: integer
        format: int32
      shipDate:
        type: string
        format: date-time
      status:
        type: string
        description: Order Status
        enum:
          - placed
          - approved
          - delivered
      complete:
        type: boolean
        default: false
    xml:
      name: Order
  error:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
    xml:
      name: Category
